import sqlite3
import threading
import time

import telebot
from help_func import create_admins_n_users_list, randomword, check_pl, check_av, check_time_to_buy, day_to_sec
from telebot import types
from yoomoney import Quickpay, Client

token = "5533820366:AAGhJ4OQ3hmOfdyT_2GK8ENqlVuevjlJLbk"  # "5533820366:AAGhJ4OQ3hmOfdyT_2GK8ENqlVuevjlJLbk" —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
token_y = "4100117884397250.BA5EFCC5CD25E1BDF810FBE73A" \
          "A1724380DAC4AB554E2751B0C39125B0AB29EFAA2EDA1090" \
          "6DB3FD8A337512F52B2E9B53F90ADA347489B12E34827D971A73F" \
          "7D8553FC7E360294833FAD3CF3E127A44F7726695B3414EC259C6080CC53" \
          "614289A749D3B80947A5D3632B447AF4C458F05C999DB8D85245EFA22A7DE81F2DAF8"  # —Ç–æ–∫–µ–Ω –Æ–º–∞–Ω–∏
client = Client(token_y)
bot = telebot.TeleBot(token)
db = sqlite3.connect("users_av.db")
price = 7  # –¶–µ–Ω–∞ –Ω–æ–º–µ—Ä–æ–≤

# –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ò–ï –ö–ù–û–ü–ö–ò
markup = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
btn1 = types.KeyboardButton(text='üì±–ö—É–ø–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç')
btn2 = types.KeyboardButton(text='üìã–ú–∞–Ω—É–∞–ª')
btn3 = types.KeyboardButton(text="üí≥–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å")
btn4 = types.KeyboardButton(text="‚úâ–†–µ—Ñ. —Å—Å—ã–ª–∫–∞")
btn5 = types.KeyboardButton(text="‚öô–ö–æ–Ω—Ç–∞–∫—Ç—ã")
btn6 = types.KeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å")
markup.add(btn1, btn3, btn6, btn2, btn4, btn5)

# –ê–î–ú–ò–ù–°–ö–ò–ï –ö–ù–û–ü–ö–ò
markup1 = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
btn11 = types.KeyboardButton(text='users')
btn22 = types.KeyboardButton(text='admins')
btn33 = types.KeyboardButton(text='add_user')
btn44 = types.KeyboardButton(text='delete_user')
btn55 = types.KeyboardButton(text='add_admin')
btn66 = types.KeyboardButton(text='delete_admin')
btn77 = types.KeyboardButton(text='check_users_balance')
btn88 = types.KeyboardButton(text='check_one_user_balance')
btn99 = types.KeyboardButton(text='change_user_balance')
btn100 = types.KeyboardButton(text='send_message')
markup1.add(btn11, btn22, btn33, btn44, btn55, btn66, btn77, btn88, btn99, btn100)

# –∫–Ω–æ–ø–∫–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
markup2 = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
btn_back = types.KeyboardButton(text='–û—Ç–º–µ–Ω–∞')
btn_check = types.KeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂")
markup2.add(btn_check, btn_back)

# markup3 = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
# btn_back_1 = types.KeyboardButton(text='–û—Ç–º–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏')
# markup3.add(btn_back_1)

# reply_markup = markup
# reply_markup1 = markup1

# –°–¢–ê–¢–ò–°–¢–ò–ö–ê
users, admins = create_admins_n_users_list()
our_mess = None


def stop_t(*chat_id):  # —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ —Ç–∞–π–º–µ—Ä–∞
    global chat_id_user_bot
    chat_id = "".join(chat_id)
    db = sqlite3.connect('users_av.db')
    bot_id = db.cursor().execute('select bot from Users where chat = ?', (chat_id,)).fetchone()[0]
    bot.send_message(chat_id_user_bot[bot_id]['chat_id_to_add'], "–í—Ä–µ–º—è –≤—ã—à–ª–æ, –≤–æ–∑–≤—Ä–∞—â–∞—é –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                     reply_markup=markup
                     )
    if chat_id_user_bot[bot_id]['balance_to_add']:
        bot.send_message(bot_id, "–û—Ç–º–µ–Ω–∞")
    else:
        if db.cursor().execute('select chat from Timeforbuy where chat = ?',
                               (chat_id_user_bot[bot_id]['chat_id_to_add'],)).fetchone():
            db.cursor().execute('update Timeforbuy set time = ? where chat = ?', (
                int(time.time()) + time_to_buy, chat_id_user_bot[bot_id]['chat_id_to_add']))
        else:
            db.cursor().execute(f"insert into Timeforbuy(chat, time)"
                                f" values(?, ?)",
                                (chat_id_user_bot[bot_id]['chat_id_to_add'], int(time.time()) + time_to_buy))
    db.commit()
    chat_id_user_bot[bot_id]['balance_to_add'] = False
    chat_id_user_bot[bot_id]['buy_acc'] = False
    chat_id_user_bot[bot_id]['chat_id_to_add'] = None
    chat_id_user_bot[bot_id]['sum_to_add'] = 0


# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –∏ –ø–æ–∫—É–ø–∫–∏

time_to_cancel = 120  # –≤—Ä–µ–º—è –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –∏ –ø–æ–∫—É–ø–∫—É –Ω–æ–º–µ—Ä–∞
time_to_buy = 60  # –≤—Ä–µ–º—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ –ø–æ–∫—É–ø–∫—É

chat_id_user_bot = {5139052149: {'chat_id_to_add': None,
                                 'balance_to_add': False, 'buy_acc': False, 'sum_to_add': False,
                                 'thread': False, 'last_chat_id_to_add': None},
                    5341167988: {'chat_id_to_add': None,
                                 'balance_to_add': False, 'buy_acc': False, 'sum_to_add': False,
                                 'thread': False, 'last_chat_id_to_add': None},
                    5460795965: {'chat_id_to_add': None,
                                 'balance_to_add': False, 'buy_acc': False, 'sum_to_add': False,
                                 'thread': False, 'last_chat_id_to_add': None},
                    5471992680: {'chat_id_to_add': None,
                                 'balance_to_add': False, 'buy_acc': False, 'sum_to_add': False,
                                 'thread': False, 'last_chat_id_to_add': None}}  # id –±–æ—Ç–æ–≤-–ø–æ—Å—Ä–µ–¥–Ω–∏–∫–∞ –∏ –∏—Ö —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ
# –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ

who = 0
count_bots = 4  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–æ—Ç–æ–≤

# –§–ª–∞–≥–∏, –¥–ª—è —Ä–∞–±–æ—Ç–∞ –∞–¥–º–∏–Ω.–ø–∞–Ω–µ–ª–∏
flags = [False, False, False, False, False, False, False]


# –ü–†–û–í–ï–†–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –ù–ê –ò–ù–î–ò–§–ò–ö–ê–¢–û–†
@bot.message_handler(commands=['start'])
def privetctive(message):  # —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –¥–µ–π—Å—Ç–≤–∏—è
    global users, admins, flags
    try:
        db = sqlite3.connect("users_av.db")
        if db.cursor().execute('select bot from Users where chat = ?', (message.chat.id,)).fetchone():
            bot_id = db.cursor().execute('select bot from Users where chat = ?', (message.chat.id,)).fetchone()[0]
            if bot_id in chat_id_user_bot.keys():
                if message.chat.id == chat_id_user_bot[bot_id]['chat_id_to_add']:
                    # —Å–±—Ä–æ—Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è, –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ /start –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –∫–æ—Ç–æ—Ä—ã–π
                    # –ø–æ–ø–æ–ª–Ω—è–µ—Ç
                    chat_id_user_bot[bot_id]['chat_id_to_add'] = None
                    chat_id_user_bot[bot_id]['balance_to_add'] = False
                    chat_id_user_bot[bot_id]['buy_acc'] = False
                    chat_id_user_bot[bot_id]['thread'].cancel
                    chat_id_user_bot[bot_id]['thread'] = None
        if message.chat.id in users and check_av(message.chat.id):
            bot.send_message(message.chat.id, f"    A–∫–∫–∞—É–Ω—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω.\n–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è :)",
                             reply_markup=markup)
            bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLWliwHa7mMGLymLDkpcOW8nrdcpicAACDwADDkfHKCnIXzw4qLKjKQQ')
            work_users(message)


        elif message.chat.id in admins:
            flags = [False, False, False, False, False, False, False]
            bot.send_sticker(message.chat.id,
                             'CAACAgIAAxkBAAEFLoRiwXdm6VEuWH7Cr_wAAW15-9rBC0oAAjoAAw5HxyjJYTg1fJGBzykE')
            bot.send_message(message.chat.id, "–ê–î–ú–ò–ù–°–ö–ê–Ø –ü–ê–ù–ï–õ–¨", reply_markup=markup1)
            work_admins(message)

        else:
            work_podpiska(message)

    except Exception as v:
        print(f"{v} - –æ—à–∏–±–∫–∞ –≤ privetctive")


@bot.message_handler(content_types=['text'])
def handler(message):  # –≥–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    global time_to_buy, flags, chat_id_user_bot
    # try:
    if True:
        if message.chat.id in admins:
            # –æ—Ç—Å–µ–∏–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
            work_admins(message)
        elif message.chat.id in list(chat_id_user_bot.keys()):  # —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–æ–≤ –∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞
            if chat_id_user_bot[message.chat.id]['chat_id_to_add']:
                text = message.text
                db = sqlite3.connect("users_av.db")
                if text == "–ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω":
                    balance = \
                        db.cursor().execute('select balance from Users where chat = ?',
                                            (chat_id_user_bot[message.chat.id]['chat_id_to_add'],)).fetchone()[0]
                    db.cursor().execute('update Users set balance = ? where chat = ?', (
                        str(int(balance) + chat_id_user_bot[message.chat.id]['sum_to_add']),
                        chat_id_user_bot[message.chat.id]['chat_id_to_add']))
                    db.commit()
                    bot.send_message(chat_id_user_bot[message.chat.id]['chat_id_to_add'], "–ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω",
                                     reply_markup=markup)
                    chat_id_user_bot[message.chat.id]['thread'].cancel()
                    chat_id_user_bot[message.chat.id]['thread'] = None
                    chat_id_user_bot[message.chat.id]['chat_id_to_add'] = None
                    chat_id_user_bot[message.chat.id]['sum_to_add'] = 0
                    chat_id_user_bot[message.chat.id]['balance_to_add'] = False

                elif "üì± –ù–æ–º–µ—Ä:" in text:
                    bot.send_message(chat_id_user_bot[message.chat.id]['chat_id_to_add'], text, reply_markup=markup)
                    chat_id_user_bot[message.chat.id]['last_chat_id_to_add'] = \
                        chat_id_user_bot[message.chat.id]['chat_id_to_add']

                elif "üï∞ –ö–æ–¥:" in text and chat_id_user_bot[message.chat.id]['chat_id_to_add'] \
                        == chat_id_user_bot[message.chat.id]['last_chat_id_to_add']:
                    bot.send_message(chat_id_user_bot[message.chat.id]['chat_id_to_add'], text, reply_markup=markup)
                    chat_id_user_bot[message.chat.id]['thread'].cancel()
                    chat_id_user_bot[message.chat.id]['thread'] = None
                    if db.cursor().execute('select chat from Timeforbuy where chat = ?', (
                            chat_id_user_bot[message.chat.id]['chat_id_to_add'],)).fetchone():
                        db.cursor().execute('update Timeforbuy set time = ? where chat = ?', (
                            int(time.time()) + time_to_buy, chat_id_user_bot[message.chat.id]['chat_id_to_add']))
                    else:
                        db.cursor().execute(f"insert into Timeforbuy(chat, time)"
                                            f" values(?, ?)",
                                            (chat_id_user_bot[message.chat.id]['chat_id_to_add'],
                                             int(time.time()) + time_to_buy))
                    db.commit()
                    chat_id_user_bot[message.chat.id]['chat_id_to_add'] = None
                    chat_id_user_bot[message.chat.id]['buy_acc'] = False

                elif "–ö–æ–¥ –¥–ª—è –≤—Ö–æ–¥–∞:" not in text and "–ù–æ–º–µ—Ä –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–∫–∫–∞—É–Ω—Ç:" not in text and \
                        text != "–ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω":
                    bot.send_message(chat_id_user_bot[message.chat.id]['chat_id_to_add'], text)

        elif message.chat.id in users:  # –æ—Ç—Å–µ–∏–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç —é–∑–µ—Ä–æ–≤
            work_users(message)

        else:  # –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–¥—É—Ç —Å—é–¥–∞
            work_podpiska(message)
    # except Exception as v:
    #      print(f"{v} + –û—à–∏–±–∫–∞ –≤ handler")


def work_admins(message):  # —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∞–¥–º–∏–Ω–æ–≤
    global admins, flags, who, count_bots, our_mess, users
    db = sqlite3.connect("users_av.db")
    if message.chat.id not in admins:
        bot.send_message(message.chat.id, '–¢—ã –Ω–µ –∞–¥–º–∏–Ω')

    if message.text == "users":  # –≤—ã–≤–æ–¥ —é–∑–µ—Ä–æ–≤
        users_list = [str(i[0]) for i in
                      db.cursor().execute('select name from Users where access like ?', ('user',)).fetchall()]
        bot.send_message(message.chat.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: " + " ;| ".join(users_list))

    elif message.text == "admins":  # –≤—ã–≤–æ–¥ –∞–¥–º–∏–Ω–æ–≤
        users_list = [str(i[0]) for i in
                      db.cursor().execute('select name from Users where access like ?', ('admin',)).fetchall()]
        bot.send_message(message.chat.id, "–ê–¥–º–∏–Ω—ã: " + " ;| ".join(users_list))

    elif message.text == "add_user":  # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —é–∑–µ—Ä–∞
        bot.send_message(message.chat.id, "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤–≤–µ–¥–∏—Ç–µ"
                                          " id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ–≥–æ –Ω–∏–∫ –∏ –≤—Ä–µ–º—è –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –¥–Ω—è—Ö (id/name/time): ")
        flags[0] = True
        flags[1], flags[2], flags[3], flags[4], flags[5], flags[6] = False, False, False, False, False, False

    elif message.text == "delete_user":  # —É–¥–∞–ª–µ–Ω–∏–µ —é–∑–µ—Ä–∞
        bot.send_message(message.chat.id, "–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ")
        flags[1] = True
        flags[2], flags[3], flags[0], flags[4], flags[5], flags[6] = False, False, False, False, False, False

    elif message.text == "add_admin":  # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤
        bot.send_message(message.chat.id, "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞, –≤–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ –Ω–∏–∫(id/name): ")
        flags[2] = True
        flags[0], flags[1], flags[3], flags[4], flags[5], flags[6] = False, False, False, False, False, False

    elif message.text == "delete_admin":  # —É–¥–∞–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤
        bot.send_message(message.chat.id, "–£–¥–∞–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –∞–¥–º–∏–Ω–∞: ")
        flags[3] = True
        flags[1], flags[0], flags[2], flags[4], flags[5], flags[6] = False, False, False, False, False, False
    elif message.text == 'check_users_balance':  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ –≤—Å–µ—Ö —é–∑–µ—Ä–æ–≤
        users_list = [f"{str(i[0])} - {str(i[1])}—Ä—É–±." for i in
                      db.cursor().execute("select name, balance from Users where access like 'user'").fetchall()]
        bot.send_message(message.chat.id, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: {' ;| '.join(users_list)}")
    elif message.text == 'change_user_balance':  # –∏–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ —É —é–∑–µ—Ä–∞
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω—É–∂–Ω—É—é —Å—É–º–º—É(name/money): ")
        flags[4] = True
        flags[1], flags[0], flags[2], flags[3], flags[5], flags[6] = False, False, False, False, False, False
    elif message.text == 'check_one_user_balance':  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ —É –æ–¥–Ω–æ–≥–æ —é–∑–µ—Ä–∞
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ")
        flags[5] = True
        flags[1], flags[0], flags[2], flags[3], flags[4], flags[6] = False, False, False, False, False, False
    elif message.text == 'send_message':  # –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º —é–∑–µ—Ä–∞–º
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:")
        flags[6] = True
        flags[1], flags[0], flags[2], flags[3], flags[4], flags[5] = False, False, False, False, False, False
    else:
        try:
            # —Ä–∞–±–æ—Ç–∞ –≤—ã—à–µ –Ω–∞–∂–∞—Ç—ã—Ö –∫–Ω–æ–ø–æ–∫ flag = [0: add_user, 1: delete_user, 2: add_admin, 3: delete_admin
            # 4: change_user_balance]
            if flags[2]:  # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤
                if not db.cursor().execute('select chat from Users where name like ? or chat = ? '
                                           'and access not like ?',
                                           (message.text.split('/')[0], message.text.split('/')[1],
                                            'admin')).fetchone():
                    id, name = message.text.split('/')
                    db.cursor().execute("delete from Users where chat = ?", (id,))
                    who = (who + 1) % count_bots
                    db.cursor().execute('insert'
                                        ' into Users(chat, access, time_sub, balance, name, bot)'
                                        ' values(?, ?, ?, ?, ?, ?)',
                                        (int(id), 'admin', int(time.time()) + day_to_sec(5000), 0, name,
                                         list(chat_id_user_bot.keys())[who]))
                    db.commit()
                    users, admins = create_admins_n_users_list()
                    flags[2] = False
                    bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ')
                else:
                    bot.send_message(message.chat.id, '–¢–∞–∫–æ–π –∞–¥–º–∏–Ω —É–∂–µ –µ—Å—Ç—å')

            elif flags[0]:  # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —é–∑–µ—Ä–∞
                if not db.cursor().execute('select chat from Users where name like ? or chat = ?',
                                           (message.text.split('/')[0], message.text.split('/')[1])).fetchone():
                    db = sqlite3.connect("users_av.db")
                    id, name, ntime = message.text.split('/')
                    who = (who + 1) % count_bots
                    db.cursor().execute('insert'
                                        ' into Users(chat, access, time_sub, balance, name, bot)'
                                        ' values(?, ?, ?, ?, ?, ?)',
                                        (int(id), 'user', int(time.time()) + day_to_sec(int(ntime)), 0, name,
                                         list(chat_id_user_bot.keys())[who]))
                    db.commit()
                    users, admins = create_admins_n_users_list()
                    flags[0] = False
                    bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ')
                else:
                    bot.send_message(message.chat.id, '–¢–∞–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å')

            elif flags[3]:  # —É–¥–∞–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–æ–≤
                db = sqlite3.connect("users_av.db")
                name = message.text
                if db.cursor().execute('select access from Users where name like ?',
                                       (name,)).fetchone()[0] == 'admin':
                    db.cursor().execute('update Users set time_sub = ?'
                                        ',access = ? where name like ?',
                                        (int(time.time()) + day_to_sec(30), 'user', name))
                    db.commit()
                    users, admins = create_admins_n_users_list()
                    flags[3] = False
                    bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ')
                else:
                    bot.send_message(message.chat.id, "–≠—Ç–æ –Ω–µ –∞–¥–º–∏–Ω")

            elif flags[1]:  # —É–¥–∞–ª–µ–Ω–∏–µ —é–∑–µ—Ä–∞
                db = sqlite3.connect("users_av.db")
                name = message.text
                if db.cursor().execute('select access from Users where name like ?',
                                       (name,)).fetchone()[0] == 'user':
                    db.cursor().execute('delete from Users where name like ?', (name,))
                    db.commit()
                    flags[1] = False
                    bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ')
                    users, admins = create_admins_n_users_list()
                else:
                    bot.send_message(message.chat.id, "–≠—Ç–æ –Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")

            elif flags[4]:  # –∏–∑–º–µ–Ω–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ —É —é–∑–µ—Ä–∞
                db = sqlite3.connect("users_av.db")
                name, money = message.text.split('/')[0], message.text.split('/')[1]
                if db.cursor().execute('select access from Users where name like ?',
                                       (name,)).fetchone()[0] == 'user':
                    db.cursor().execute('update Users set balance = ?'
                                        'where name like ?',
                                        (int(money), name))
                    db.commit()
                    bot.send_message(message.chat.id, '–£—Å–ø–µ—à–Ω–æ')
                    users, admins = create_admins_n_users_list()
                    flags[4] = False

            elif flags[5]:  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ —É –æ–¥–Ω–æ–≥–æ —é–∑–µ—Ä–∞
                name = message.text
                balance = db.cursor().execute(
                    "select balance from Users where access like 'user' and name like ?",
                    (name,)).fetchone()[0]
                flags[5] = False
                bot.send_message(message.chat.id, f"{name} - {balance}—Ä—É–±.")

            elif flags[6]:  # –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º —é–∑–µ—Ä–∞–º
                mess = message.text
                if not our_mess:
                    our_mess = mess
                    bot.send_message(message.chat.id,
                                     f'–í—ã —É–≤–µ—Ä–µ–Ω—ã –≤ —ç—Ç–æ–º —Å–æ–æ–±—â–µ–Ω–∏–µ: {our_mess}. ?. –ï—Å–ª–∏ –¥–∞, –Ω–∞–ø–∏—à–∏—Ç–µ 1:')
                elif str(mess) == '1':
                    bot.send_message(message.chat.id, f"–£—Å–ø–µ—à–Ω–æ.")
                    db = sqlite3.connect('users_av.db')
                    users_t = [i[0] for i in db.cursor().execute("select chat from Users"
                                                                 "where access like ? "
                                                                 "and name not like '%bot_user%'").fetchall()]
                    for i in users_t:
                        bot.send_message(i, our_mess, reply_markup=markup)
                else:
                    bot.send_message(message.chat.id, f"–û—Ç–º–µ–Ω–∞.")


        except Exception as v:  # –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
            print(v)
            flags = [False, False, False, False, False, False]
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ –≤ –¥–∞–Ω–Ω—ã—Ö")


def work_users(message):  # –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —é–∑–µ—Ä–æ–≤
    global time_to_buy, chat_id_user_bot, price
    # try:
    if True:
        db = sqlite3.connect('users_av.db')
        bot_id = db.cursor().execute('select bot from Users where chat = ?', (message.chat.id,)).fetchone()[0]
        if message.text == "‚öô–ö–æ–Ω—Ç–∞–∫—Ç—ã":
            bot.send_sticker(message.chat.id,
                             'CAACAgIAAxkBAAEFLoBiwXc3kke5xYI5-v5dBXMXD_tYcgACIAADDkfHKIn3WfQkFme2KQQ')
            bot.send_message(message.chat.id, "–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º:\n@spasontis")


        elif message.text == "‚úâ–†–µ—Ñ. —Å—Å—ã–ª–∫–∞":
            bot.send_message(message.chat.id, "https://whoosh.app.link/invite_friend?referral_id=31DfEPs")

        elif message.text == "üìã–ú–∞–Ω—É–∞–ª":
            bot.send_message(message.chat.id, """   1) –ü–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤–∞–º –±—É–¥–µ—Ç –¥–∞–Ω –Ω–æ–º–µ—Ä –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Å–æ–∑–¥–∞–µ—Ç–µ –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ Whoosh.
( –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–º—Å –∫–æ–¥–∞ –≤–∞–º –ø—Ä–∏—à–ª—ë—Ç –±–æ—Ç ). –ü—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–≤–æ–¥–∏—Ç–µ —Å–≤–æ—é –Ω–∞—Å—Ç–æ—è—â—É—é –±–∞–Ω–∫–æ–≤—Å–∫—É—é –∫–∞—Ä—Ç—É! 

    2) –ó–∞—Ö–æ–¥–∏—Ç–µ –≤ –ø—Ä–æ–º–æ–∫–æ–¥—ã –∏ –≤–ø–∏—Å—ã–≤–∞–µ—Ç–µ ‚ÄúGOODRIDE‚Äù, —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—Å—ã–ª–∫—É.
(–†–µ—Ñ. cc—ã–ª–∫–∞ –≤—ã–¥–∞–µ—Ç—Å—è –≤ –º–µ–Ω—é –±–æ—Ç–∞).

    3) –î–∞–ª–µ–µ –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ Whoosh ( –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –Ω–µ –≤–∞–∂–Ω–æ ). –ü–æ—Å–∫–æ–ª—å–∫—É –Ω–∞ –ø–µ—Ä–≤—ã–π —Å—Ä–æ–∫ –æ–Ω–∞ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è, –¥–µ–Ω—å–≥–∏ –Ω–µ —Å–ø–∏—à—É—Ç—Å—è. –ù—É–∂–Ω–æ –±—É–¥–µ—Ç —É–±—Ä–∞—Ç—å –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏.

    4) –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å 2 –ø—Ä–æ–º–æ–∫–æ–¥–∞ –ø–æ 100 —Ä—É–±–ª–µ–π (100 —Ä—É–±–ª–µ–π ~ 14 –º–∏–Ω—É—Ç –ø–æ–µ–∑–¥–∫–∏).

    5) –î–ª—è –±–æ–ª—å—à–µ–π —ç–∫–æ–Ω–æ–º–∏–∏, —Å–æ–≤–µ—Ç—É–µ–º –æ—Ç–∫–ª—é—á–∏—Ç—å –≥–∞–ª–æ—á–∫—É —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏ –≤ 35 —Ä—É–±–ª–µ–π –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø–æ–µ–∑–¥–∫–∏.

    6) –ù–µ –ø—Ä–µ–≤—ã—à–∞–π—Ç–µ –ª–∏–º–∏—Ç —Å—Ç–∞ —Ä—É–±–ª–µ–π –Ω–∞ –ø–æ–µ–∑–¥–∫—É, –∏–Ω–∞—á–µ –¥–∞–ª—å—à–µ –±—É–¥—É—Ç —Å–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –¥–µ–Ω—å–≥–∏ —Å –≤–∞—à–µ–π –∫–∞—Ä—Ç—ã.

    7) –ü–æ—Å–ª–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–µ —É–±–∏—Ä–∞–µ–º –≤–∞—à—É –±–∞–Ω–∫–æ–≤—Å–∫—É—é –∫–∞—Ä—Ç—É –≤ –æ–ø–ª–∞—Ç–µ –∏ –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ !

–û–î–ò–ù –ü–†–û–ú–û–ö–û–î ‚Äì –û–î–ù–ê –ü–û–ï–ó–î–ö–ê.""")

        elif message.text == "üë§ –ü—Ä–æ—Ñ–∏–ª—å":
            db = sqlite3.connect("users_av.db")
            bot.send_sticker(message.chat.id,
                             'CAACAgIAAxkBAAEFLoJiwXdNSLjmHdMUG1cwQRVsZRfcLwACMwADDkfHKGxLD9RFtmVqKQQ')
            bot.send_message(message.chat.id, f"""
üëî –ü—Ä–æ—Ñ–∏–ª—å:
üë§ –í–∞—à ID: {str(message.chat.id)}
üíº –í–∞—à –±–∞–ª–∞–Ω—Å: {str(db.cursor().execute(
                'select balance from Users where chat = ?', (message.chat.id,)).fetchone()[0])} —Ä—É–±.""")

        elif message.text == "üí≥–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å" and \
                not chat_id_user_bot[bot_id]['balance_to_add'] and not chat_id_user_bot[bot_id]['buy_acc']:
            bot.send_message(message.chat.id,
                             f"–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ 10 —Ä—É–±–ª—å.\n–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –≤–∞–º –±—É–¥–µ—Ç "
                             f"–≤—ã–¥–µ–ª–µ–Ω–æ {time_to_cancel} —Å–µ–∫. –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–∂–º–∏—Ç–µ"
                             f" '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂', –∏–Ω–∞—á–µ –¥–µ–Ω—å–≥–∏ –Ω–µ –∑–∞—á–∏—Å–ª—è—Ç—Å—è.\n–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ):",
                             reply_markup=markup2)
            chat_id_user_bot[bot_id]['balance_to_add'] = True
            chat_id_user_bot[bot_id]['chat_id_to_add'] = message.chat.id
            chat_id_user_bot[bot_id]['thread'] = threading.Timer(time_to_cancel, stop_t, list(str(message.chat.id)))
            chat_id_user_bot[bot_id]['thread'].start()
            bot.send_message(bot_id, text=message.text)

        elif message.text == "üì±–ö—É–ø–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç" and not chat_id_user_bot[bot_id]['balance_to_add'] and \
                not chat_id_user_bot[bot_id]['buy_acc']:
            if check_time_to_buy(message.chat.id):
                if int(db.cursor().execute('select balance from Users where chat = ?', (message.chat.id,)).fetchone()[
                           0]) >= price:
                    chat_id_user_bot[bot_id]['buy_acc'] = True
                    chat_id_user_bot[bot_id]['chat_id_to_add'] = message.chat.id
                    bot.send_message(message.chat.id, "‚ùóÔ∏è –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ü–†–û–ß–¢–ò –ú–ê–ù–£–ê–õ ‚ùóÔ∏è\n"
                                                      "–í—ã —É–≤–µ—Ä–µ–Ω—ã?\n–ï—Å–ª–∏ –¥–∞, —Ç–æ "
                                                      "–Ω–∞ –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è —É –≤–∞—Å –µ—Å—Ç—å"
                                                      f" {time_to_cancel} —Å–µ–∫.\n–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤—å—Ç–µ: 1",
                                     reply_markup=types.ReplyKeyboardRemove())
                    chat_id_user_bot[bot_id]['thread'] = threading.Timer(time_to_cancel, stop_t,
                                                                         list(str(message.chat.id)))
                    chat_id_user_bot[bot_id]['thread'].start()
                else:
                    bot.send_message(message.chat.id, f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤, —Ü–µ–Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ = {price} —Ä—É–±–ª—è–º",
                                     reply_markup=markup)
                    chat_id_user_bot[bot_id]['buy_acc'] = False
                    chat_id_user_bot[bot_id]['chat_id_to_add'] = None
            else:
                bot.send_message(message.chat.id, f"–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–∫—É–ø–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç –ª–∏—à—å —Ä–∞–∑ –≤ {time_to_buy} —Å–µ–∫.",
                                 reply_markup=markup)
                chat_id_user_bot[bot_id]['buy_acc'] = False
                chat_id_user_bot[bot_id]['chat_id_to_add'] = None

        elif (message.text == "üí≥–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å" or
              message.text == "üì±–ö—É–ø–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç") and (chat_id_user_bot[bot_id]['balance_to_add']
                                                       or chat_id_user_bot[bot_id]['buy_acc']):  # –æ—á–µ—Ä–µ–¥—å
            bot.send_message(message.chat.id, text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å —Å–≤–æ–µ–π –æ—á–µ—Ä–µ–¥–∏", reply_markup=markup)

        else:
            if chat_id_user_bot[bot_id]['chat_id_to_add'] == message.chat.id and \
                    chat_id_user_bot[bot_id]['buy_acc']:  # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫—É–ø–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç
                if message.text == "1":
                    db = sqlite3.connect('users_av.db')
                    print(chat_id_user_bot[bot_id]['chat_id_to_add'])
                    balance = \
                        db.cursor().execute('select balance from Users where chat = ?', (
                            chat_id_user_bot[bot_id]['chat_id_to_add'],)).fetchone()[0]
                    db.cursor().execute('update Users set balance = ? where chat = ?', (
                        str(int(balance) - price), chat_id_user_bot[bot_id]['chat_id_to_add'],))
                    db.commit()
                    bot.send_message(bot_id, "üì±–ö—É–ø–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç")
                    bot.send_message(chat_id_user_bot[bot_id]['chat_id_to_add'], "–ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–∞—Ä—É —Å–µ–∫—É–Ω–¥",
                                     reply_markup=markup)
                else:
                    bot.send_message(chat_id_user_bot[bot_id]['chat_id_to_add'], "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                                     reply_markup=markup)
                    chat_id_user_bot[bot_id]['thread'].cancel()
                    chat_id_user_bot[bot_id]['thread'] = None
                    chat_id_user_bot[bot_id]['buy_acc'] = False
                    chat_id_user_bot[bot_id]['chat_id_to_add'] = None

            elif chat_id_user_bot[bot_id]['balance_to_add'] \
                    and chat_id_user_bot[bot_id]['chat_id_to_add'] == message.chat.id:
                # –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å
                if message.text == '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂':
                    bot.send_message(bot_id, text=message.text)  # —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–æ–≤
                elif message.text == "–û—Ç–º–µ–Ω–∞":
                    bot.send_message(bot_id, '–û—Ç–º–µ–Ω–∞')  # —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–æ–≤
                    bot.send_message(message.chat.id, "–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=markup)
                    chat_id_user_bot[bot_id]['balance_to_add'] = False
                    chat_id_user_bot[bot_id]['chat_id_to_add'] = None
                    chat_id_user_bot[bot_id]['thread'].cancel()
                    chat_id_user_bot[bot_id]['thread'] = None

                else:
                    if all([i in "1234567890" for i in list(message.text)]):
                        if not chat_id_user_bot[bot_id]['sum_to_add']:
                            if int(message.text) < 10:
                                bot.send_message(chat_id_user_bot[bot_id]['chat_id_to_add'],
                                                 text='–°—É–º–º–∞ –º–µ–Ω—å—à–µ –º–∏–Ω.')
                            else:
                                chat_id_user_bot[bot_id]['sum_to_add'] = int(message.text)
                        bot.send_message(bot_id, text=int(message.text))
                        # —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–æ–≤
                    else:
                        bot.send_message(chat_id_user_bot[bot_id]['chat_id_to_add'], text='–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤–≤–µ–¥–µ–Ω–∞ —Å—É–º–º–∞')
    # except Exception as v:
    #     print(f"{v} + –í work_users")


def work_podpiska(message):  # —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
    global who, count_bots, chat_id_user_bot, users, admins
    if message.text == "–ö—É–ø–∏—Ç—å":
        db = sqlite3.connect("users_av.db")
        # –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫—Ç–∏–≤–Ω—ã–π –ø–ª–∞—Ç–µ–∂ –∏ –µ–≥–æ —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –ë–î, –µ—Å–ª–∏ –µ—Å—Ç—å
        if db.cursor().execute("select label from Plat where chat = ?", (message.chat.id,)).fetchall():
            db.cursor().execute('delete from Plat where chat = ?', (message.chat.id,))
        tryi = True
        while tryi:  # —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–ª–∞—Ç–µ–∂–∞
            try:
                label = randomword(16)
                time_sub = int(time.time()) + day_to_sec(1)
                db.cursor().execute(f"insert into Plat(chat, time, label) values(?, ?, ?)",
                                    (message.chat.id, time_sub, label))
                db.commit()
                tryi = False
            except Exception:
                pass
        quickpay = Quickpay(  # —Å–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞
            receiver="4100117884397250",  # <-- —Ç—É—Ç —Å–≤–æ–π –Ω–æ–º–µ—Ä —é–º–∞–Ω–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞
            quickpay_form="shop",
            targets="Sponsor this project",
            paymentType="SB",
            sum=2,  # <-- —Ü–µ–Ω–∞
            label=label
        )
        bot.send_message(message.chat.id, quickpay.redirected_url)
    elif message.text == '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å':
        try:
            if not check_pl(message.chat.id):
                bot.send_message(message.chat.id, "–°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂, –ø—Ä–µ–¥. –ø—Ä–æ—Å—Ä–æ—á–µ–Ω")
            else:
                db = sqlite3.connect("users_av.db")
                plat = db.cursor().execute("select label from Plat where chat = ?", (message.chat.id,)).fetchall()
                if plat:
                    history = client.operation_history(label=plat[-1][0])
                    print(history.operations)
                    for operation in history.operations:  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–π –∫–æ—à–µ–ª—å–∫–∞
                        print(operation.status)
                        if operation.status == 'success':
                            db = sqlite3.connect("users_av.db")
                            who = (who + 1) % count_bots
                            time_sub = int(time.time()) + day_to_sec(30)  # –¥–Ω–µ–π –≤ –ø–æ–¥–ø–∏—Å–∫–µ(—á–∏—Å–ª–æ 30)
                            db.cursor().execute(f"insert into Users(chat, access, balance, time_sub, name, bot)"
                                                f" values(?, ?, ?, ?, ?, ?)",
                                                (message.chat.id, 'user', 0, time_sub, message.from_user.username,
                                                 list(chat_id_user_bot.keys())[who]))
                            db.commit()
                            users, admins = create_admins_n_users_list()
                            db.cursor().execute('delete from Plat where chat = ?', (message.chat.id,))
                            db.commit()
                            bot.send_message(message.chat.id, "–£—Å–ø–µ—à–Ω–æ", reply_markup=markup)
                            break

                    else:
                        bot.send_message(message.chat.id, "–ü–ª–∞—Ç–µ–∂ –µ—â–µ –Ω–µ –ø—Ä–∏—à—ë–ª")
        except Exception as v:
            print(f"{v} + –û—à–∏–±–∫–∞ –≤ work_podpiska")
    else:
        markup3 = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
        btn_buy_1 = types.KeyboardButton(text='–ö—É–ø–∏—Ç—å')
        btn_check_1 = types.KeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å')
        markup3.add(btn_buy_1, btn_check_1)
        bot.send_message(message.chat.id, f"–ê–∫–∫–∞—É–Ω—Ç –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω.\n–û—Ñ–æ—Ä–º–∏ –ø–æ–¥–ø–∏—Å–∫—É ( 30 –¥–Ω–µ–π = 150 —Ä—É–±–ª–µ–π ).",
                         reply_markup=markup3)
        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLWtiwHeH-bAfHmMFfXV50bT1Cfv8SQACEgADDkfHKATauSzHGIhqKQQ')


if __name__ == '__main__':
    bot.polling()
